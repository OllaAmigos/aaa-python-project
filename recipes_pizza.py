class Pizza:
    """Base pizza recipe class"""
    PIZZA_SIZES = ['L', 'XL']

    def __init__(
            self,
            ingredients: list[str, ...],
            size: str = 'L',
            emoji: str = '',
            is_baked: bool = False,
            is_delivered: bool = False,
            is_pickup: bool = False
    ) -> None:
        """
        –û–±—ä—è–≤–ª—è–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã.
         –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
             ingredients: list; —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.
             size: str; –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã (L –∏–ª–∏ XL).
             emoji: str; —ç–º–æ–¥–∂–∏ —Ä—è–¥–æ–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø–∏—Ü—Ü—ã'.
             is_baked: bool; —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∏—Å–ø–µ—á–µ–Ω–∞ –ª–∏ –ø–∏—Ü—Ü–∞.
             is_delivered: bool; —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ª–∏ –ø–∏—Ü—Ü–∞.
             is_pickup: bool; —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∑–∞–±—Ä–∞–ª–∏ –ª–∏ –ø–∏—Ü—Ü—É.
         –ß—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç:
             ValueError: –ï—Å–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä.
        """
        if size not in self.PIZZA_SIZES:
            raise ValueError(f'Invalid pizza size: {size}')

        self.ingredients = ingredients
        self.size = size
        self.emoji = emoji
        self.is_baked = is_baked
        self.is_delivered = is_delivered
        self.is_pickup = is_pickup

    def bake(self) -> None:
        """Bakes the pizza."""
        self.is_baked = True

    def delivery(self) -> None:
        """Delivers the pizza."""
        self.is_delivered = True

    def pickup(self) -> None:
        """Picks up the pizza."""
        self.is_pickup = True

    def abot(self) -> str:
        """–ü–µ—á–∞—Ç–∞–µ—Ç –≤–∏–¥ –ø–∏—Ü—Ü—ã –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        return f'Pizza with {self.size} size\ningredients: {", ".join(self.ingredients)}'

    def __dict__(self) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–∏—Ü—Ü—É –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å"""
        return {
            'size': self.size,
            'ingredients': self.ingredients,
        }

    def __eq__(self, other) -> bool:
        """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –¥–≤—É—Ö –ø–∏—Ü—Ü –ø–æ —Ç–∏–ø—É –∏ —Ä–∞–∑–º–µ—Ä—É"""
        if not isinstance(other, Pizza):
            raise ValueError(f'Invalid pizza type: {type(other)}')

        return (
                self.size == other.size
                and self.ingredients == other.ingredients
        )


class Margherita(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"""

    emoji = 'üßÄ'
    ingredients = ['tomato sauce', 'mozzarella', 'tomatoes']

    def __init__(self, size: str = 'XL') -> None:
        """–û–±—ä—è–≤–ª—è–µ–º –ø–∏—Ü—Ü—É –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
        super().__init__(self.ingredients, size, self.emoji)


class Pepperoni(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏"""

    emoji = 'üçï'
    ingredients = ['tomato sauce', 'mozzarella', 'pepperoni']

    def __init__(self, size: str = 'L') -> None:
        """–û–±—ä—è–≤–ª—è–µ–º –ø–∏—Ü—Ü—É –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
        super().__init__(self.ingredients, size, self.emoji)


class Hawaiian(Pizza):
    """–†–µ—Ü–µ–ø—Ç –ì–∞–≤–∞–π—Å–∫–æ–π –ø–∏—Ü—Ü—ã"""

    emoji = 'üçç'
    ingredients = ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']

    def __init__(self, size: str = 'L') -> None:
        """–û–±—ä—è–≤–ª—è–µ–º –ì–∞–≤–∞–π—Å–∫—É—é –ø–∏—Ü—Ü—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞"""
        super().__init__(self.ingredients, size, self.emoji)
